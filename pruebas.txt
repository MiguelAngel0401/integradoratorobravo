@user_views.route('/users/login/', methods=('GET', 'POST'))
def login():
    form = LoginForm()

    if form.validate_on_submit():
        username = form.username.data
        password = form.password.data
        user = User.get_by_password(username, password)
        if not user:
            flash('Verifica tus Datos')
        else:
            session["user"]= user.username
            return redirect(url_for('home.home'))
    return render_template('users/login.html', form=form)



Login

def login():
    form = LoginForm()
    if request.method =='POST':
        #user = User(0, request.form('username', request.form('password')))
        form = User.login(request.form['username'], request.form['password'])
        if form != None:
            if form.password:
                login_user(form)
                return redirect(url_for('product.products', form=form))
            else:
                flash('Contrase√±a Incorrecta...')
                return render_template('users/login.html', form=form)
        else:
            flash('Usuario no encontrado...')
            return render_template('users/login.html', form=form)
    else: 
        return render_template('users/login.html', form=form)


MODELS - Login

@classmethod
    def login(self, user, password):
        try:
            cursor= mydb.cursor()
            sql= "SELECT id, username, password FROM users WHERE username={}.format(user.username)"
            cursor.execute(sql)
            row = cursor.fetchone()
            if row != None:
                if User.check_password(row[1], password):
                    user = User.__get__(row['id'])
                return user
            else:
                return None
        except Exception as ex:
            raise Exception(ex)